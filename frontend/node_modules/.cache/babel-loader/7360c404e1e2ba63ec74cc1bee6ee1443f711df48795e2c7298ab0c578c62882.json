{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammad Umer\\\\OneDrive\\\\Desktop\\\\Cloud Semester Project\\\\frontend\\\\src\\\\components\\\\PerformanceMetrics.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Typography, Grid, Box } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PerformanceMetrics = () => {\n  _s();\n  const [metrics, setMetrics] = useState(null);\n  useEffect(() => {\n    const fetchMetrics = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/performance');\n        setMetrics(response.data);\n      } catch (error) {\n        console.error('Error fetching metrics:', error);\n      }\n    };\n    fetchMetrics();\n    const interval = setInterval(fetchMetrics, 30000); // Update every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n  if (!metrics) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading metrics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Performance Metrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"textSecondary\",\n          children: \"Average Delay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: [metrics.average_delay, \" min\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"textSecondary\",\n          children: \"On-Time Percentage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: [metrics.on_time_percentage, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"textSecondary\",\n          children: \"Active Vehicles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: metrics.active_vehicles\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"textSecondary\",\n          children: [\"Last updated: \", new Date(metrics.timestamp).toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(PerformanceMetrics, \"fkAZCjMJDoW80OvZsNTeiaw81+c=\");\n_c = PerformanceMetrics;\nexport default PerformanceMetrics;\nvar _c;\n$RefreshReg$(_c, \"PerformanceMetrics\");","map":{"version":3,"names":["React","useEffect","useState","Typography","Grid","Box","axios","jsxDEV","_jsxDEV","PerformanceMetrics","_s","metrics","setMetrics","fetchMetrics","response","get","data","error","console","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","container","spacing","item","xs","color","average_delay","on_time_percentage","active_vehicles","Date","timestamp","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/Muhammad Umer/OneDrive/Desktop/Cloud Semester Project/frontend/src/components/PerformanceMetrics.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Typography, Grid, Box } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\ninterface Metrics {\r\n  average_delay: number;\r\n  on_time_percentage: number;\r\n  active_vehicles: number;\r\n  timestamp: string;\r\n}\r\n\r\nconst PerformanceMetrics: React.FC = () => {\r\n  const [metrics, setMetrics] = useState<Metrics | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMetrics = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/performance');\r\n        setMetrics(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching metrics:', error);\r\n      }\r\n    };\r\n\r\n    fetchMetrics();\r\n    const interval = setInterval(fetchMetrics, 30000); // Update every 30 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  if (!metrics) {\r\n    return <Typography>Loading metrics...</Typography>;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Performance Metrics\r\n      </Typography>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n            Average Delay\r\n          </Typography>\r\n          <Typography variant=\"h4\">\r\n            {metrics.average_delay} min\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n            On-Time Percentage\r\n          </Typography>\r\n          <Typography variant=\"h4\">\r\n            {metrics.on_time_percentage}%\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n            Active Vehicles\r\n          </Typography>\r\n          <Typography variant=\"h4\">\r\n            {metrics.active_vehicles}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"caption\" color=\"textSecondary\">\r\n            Last updated: {new Date(metrics.timestamp).toLocaleTimeString()}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PerformanceMetrics; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
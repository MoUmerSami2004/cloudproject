{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhammad Umer\\\\OneDrive\\\\Desktop\\\\Cloud Semester Project\\\\frontend\\\\src\\\\components\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Typography, List, ListItem, ListItemText, Box } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [routes, setRoutes] = useState([]);\n  const [historicalData, setHistoricalData] = useState([]);\n  useEffect(() => {\n    const fetchRoutes = async () => {\n      try {\n        const response = await axios.get('http://localhost:8000/api/routes');\n        setRoutes(response.data);\n      } catch (error) {\n        console.error('Error fetching routes:', error);\n      }\n    };\n    fetchRoutes();\n    const interval = setInterval(fetchRoutes, 30000); // Update every 30 seconds\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Mock historical data for the chart\n  useEffect(() => {\n    const generateHistoricalData = () => {\n      const data = [];\n      for (let i = 0; i < 24; i++) {\n        data.push({\n          time: `${i}:00`,\n          delay: Math.random() * 20,\n          vehicles: Math.floor(Math.random() * 50) + 20\n        });\n      }\n      setHistoricalData(data);\n    };\n    generateHistoricalData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Route Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: routes.map(route => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: route.name,\n          secondary: `Status: ${route.status} | Delay: ${route.delay} min`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, route.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      sx: {\n        mt: 4\n      },\n      children: \"Historical Performance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: 300\n      },\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: historicalData,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            yAxisId: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            yAxisId: \"right\",\n            orientation: \"right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            yAxisId: \"left\",\n            type: \"monotone\",\n            dataKey: \"delay\",\n            stroke: \"#8884d8\",\n            name: \"Average Delay (min)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            yAxisId: \"right\",\n            type: \"monotone\",\n            dataKey: \"vehicles\",\n            stroke: \"#82ca9d\",\n            name: \"Active Vehicles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"7/EvZj1IfannsCE9IX5F/BqClxA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Typography","List","ListItem","ListItemText","Box","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","axios","jsxDEV","_jsxDEV","Dashboard","_s","routes","setRoutes","historicalData","setHistoricalData","fetchRoutes","response","get","data","error","console","interval","setInterval","clearInterval","generateHistoricalData","i","push","time","delay","Math","random","vehicles","floor","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","map","route","primary","name","secondary","status","id","sx","mt","height","width","strokeDasharray","dataKey","yAxisId","orientation","type","stroke","_c","$RefreshReg$"],"sources":["C:/Users/Muhammad Umer/OneDrive/Desktop/Cloud Semester Project/frontend/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Typography, List, ListItem, ListItemText, Box } from '@mui/material';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport axios from 'axios';\r\n\r\ninterface Route {\r\n  id: string;\r\n  name: string;\r\n  status: string;\r\n  delay: number;\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const [routes, setRoutes] = useState<Route[]>([]);\r\n  const [historicalData, setHistoricalData] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchRoutes = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8000/api/routes');\r\n        setRoutes(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching routes:', error);\r\n      }\r\n    };\r\n\r\n    fetchRoutes();\r\n    const interval = setInterval(fetchRoutes, 30000); // Update every 30 seconds\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Mock historical data for the chart\r\n  useEffect(() => {\r\n    const generateHistoricalData = () => {\r\n      const data = [];\r\n      for (let i = 0; i < 24; i++) {\r\n        data.push({\r\n          time: `${i}:00`,\r\n          delay: Math.random() * 20,\r\n          vehicles: Math.floor(Math.random() * 50) + 20,\r\n        });\r\n      }\r\n      setHistoricalData(data);\r\n    };\r\n\r\n    generateHistoricalData();\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Route Status\r\n      </Typography>\r\n      <List>\r\n        {routes.map((route) => (\r\n          <ListItem key={route.id}>\r\n            <ListItemText\r\n              primary={route.name}\r\n              secondary={`Status: ${route.status} | Delay: ${route.delay} min`}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n\r\n      <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\r\n        Historical Performance\r\n      </Typography>\r\n      <Box sx={{ height: 300 }}>\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <LineChart data={historicalData}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"time\" />\r\n            <YAxis yAxisId=\"left\" />\r\n            <YAxis yAxisId=\"right\" orientation=\"right\" />\r\n            <Tooltip />\r\n            <Line\r\n              yAxisId=\"left\"\r\n              type=\"monotone\"\r\n              dataKey=\"delay\"\r\n              stroke=\"#8884d8\"\r\n              name=\"Average Delay (min)\"\r\n            />\r\n            <Line\r\n              yAxisId=\"right\"\r\n              type=\"monotone\"\r\n              dataKey=\"vehicles\"\r\n              stroke=\"#82ca9d\"\r\n              name=\"Active Vehicles\"\r\n            />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}